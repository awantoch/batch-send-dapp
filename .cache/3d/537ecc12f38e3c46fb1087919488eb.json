{"id":"node_modules/scryptsy/lib/scryptSync.js","dependencies":[{"name":"/Users/alec/Workspace/batch-send-dapp/package.json","includedInParent":true,"mtime":1574483067887},{"name":"/Users/alec/Workspace/batch-send-dapp/node_modules/scryptsy/package.json","includedInParent":true,"mtime":1574482095815},{"name":"crypto","loc":{"line":1,"column":23},"parent":"/Users/alec/Workspace/batch-send-dapp/node_modules/scryptsy/lib/scryptSync.js","resolved":"/Users/alec/Workspace/batch-send-dapp/node_modules/crypto-browserify/index.js"},{"name":"./utils","loc":{"line":5,"column":12},"parent":"/Users/alec/Workspace/batch-send-dapp/node_modules/scryptsy/lib/scryptSync.js","resolved":"/Users/alec/Workspace/batch-send-dapp/node_modules/scryptsy/lib/utils.js"}],"generated":{"js":"const crypto = require('crypto')\nconst {\n  checkAndInit,\n  smixSync\n} = require('./utils')\n\n// N = Cpu cost, r = Memory cost, p = parallelization cost\nfunction scrypt (key, salt, N, r, p, dkLen, progressCallback) {\n  const {\n    XY,\n    V,\n    B32,\n    x,\n    _X,\n    B,\n    tickCallback\n  } = checkAndInit(key, salt, N, r, p, dkLen, progressCallback)\n\n  for (var i = 0; i < p; i++) {\n    smixSync(B, i * 128 * r, r, N, V, XY, _X, B32, x, tickCallback)\n  }\n\n  return crypto.pbkdf2Sync(key, B, 1, dkLen, 'sha256')\n}\n\nmodule.exports = scrypt\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/scryptsy/lib/scryptSync.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"node_modules/scryptsy/lib/scryptSync.js":"const crypto = require('crypto')\nconst {\n  checkAndInit,\n  smixSync\n} = require('./utils')\n\n// N = Cpu cost, r = Memory cost, p = parallelization cost\nfunction scrypt (key, salt, N, r, p, dkLen, progressCallback) {\n  const {\n    XY,\n    V,\n    B32,\n    x,\n    _X,\n    B,\n    tickCallback\n  } = checkAndInit(key, salt, N, r, p, dkLen, progressCallback)\n\n  for (var i = 0; i < p; i++) {\n    smixSync(B, i * 128 * r, r, N, V, XY, _X, B32, x, tickCallback)\n  }\n\n  return crypto.pbkdf2Sync(key, B, 1, dkLen, 'sha256')\n}\n\nmodule.exports = scrypt\n"},"lineCount":27}},"error":null,"hash":"ff54ad41eff9ab60a9c2dcb7c61145e6","cacheData":{"env":{}}}